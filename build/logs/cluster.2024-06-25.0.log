#logback.classic pattern: %logger{0} %msg%n
Slf4jLogger Slf4jLogger started
#logback.classic pattern: %logger{0} %X{replicaId} %msg%n
Slf4jLogger  Slf4jLogger started
Client 2 starting with 3 peer(s)
Replica 1 Starting with 3 peer(s)
Replica 2 Starting with 3 peer(s)
Replica 3 Starting with 3 peer(s)
Client 1 starting with 3 peer(s)
Replica 1 Participants: [Actor[akka://vssystem/user/coordinator#284652189], Actor[akka://vssystem/user/replica-2#1300565256], Actor[akka://vssystem/user/replica-1#-1028909638]]
Replica 2 Participants: [Actor[akka://vssystem/user/coordinator#284652189], Actor[akka://vssystem/user/replica-2#1300565256], Actor[akka://vssystem/user/replica-1#-1028909638]]
Replica 3 Participants: [Actor[akka://vssystem/user/coordinator#284652189], Actor[akka://vssystem/user/replica-2#1300565256], Actor[akka://vssystem/user/replica-1#-1028909638]]
Replica 2 Coordinator is not responding. Starting election.
Replica 1 Coordinator is not responding. Starting election.
Replica 2  Received election message. Proposed coordinator: 2
Replica 1  Received election message. Proposed coordinator: 2
Replica  replica-2 Election timeout. Trying with next node: 1
Replica 1 New participant added: replica-1
Replica 1 New participant added: replica-2
Replica 1 Participants in the new view: [Actor[akka://vssystem/user/replica-1#-1028909638], Actor[akka://vssystem/user/replica-2#1300565256]]
Replica 1 Coordinator in the new view: replica-2
Replica 2 View change message sent
Replica 2 New participant added: replica-1
Replica 2 New participant added: replica-2
Replica 2 Participants in the new view: [Actor[akka://vssystem/user/replica-1#-1028909638], Actor[akka://vssystem/user/replica-2#1300565256]]
Replica 2 Coordinator in the new view: replica-2
RepointableActorRef  Message [org.total_order_broadcast.Node$ElectionTimeout] from Actor[akka://vssystem/user/replica-2#1300565256] to Actor[akka://vssystem/user/replica-2#1300565256] was unhandled. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
RepointableActorRef  Message [org.total_order_broadcast.Node$ElectionTimeout] from Actor[akka://vssystem/user/replica-1#-1028909638] to Actor[akka://vssystem/user/replica-1#-1028909638] was unhandled. [2] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
#logback.classic pattern: %logger{0} %X{replicaId} %msg%n
Slf4jLogger  Slf4jLogger started
Replica 1 Starting with 3 peer(s)
Replica 2 Starting with 3 peer(s)
Replica 3 Starting with 3 peer(s)
Client 1 starting with 3 peer(s)
Client 2 starting with 3 peer(s)
Replica 3 Participants: [Actor[akka://vssystem/user/coordinator#-433676604], Actor[akka://vssystem/user/replica-2#1860791083], Actor[akka://vssystem/user/replica-1#-1997972147]]
Replica 1 Participants: [Actor[akka://vssystem/user/coordinator#-433676604], Actor[akka://vssystem/user/replica-2#1860791083], Actor[akka://vssystem/user/replica-1#-1997972147]]
Replica 2 Participants: [Actor[akka://vssystem/user/coordinator#-433676604], Actor[akka://vssystem/user/replica-2#1860791083], Actor[akka://vssystem/user/replica-1#-1997972147]]
Replica 2 Coordinator is not responding. Starting election.
Replica 1 Coordinator is not responding. Starting election.
Replica 2  Received election message. Proposed coordinator: 2
Replica 1  Received election message. Proposed coordinator: 2
Replica  replica-2 Election timeout. Trying with next node: 1
Replica 1 New participant added: replica-2
Replica 1 New participant added: replica-1
Replica 1 Participants in the new view: [Actor[akka://vssystem/user/replica-2#1860791083], Actor[akka://vssystem/user/replica-1#-1997972147]]
Replica 1 Coordinator in the new view: replica-2
Replica 2 View change message sent
Replica 2 New participant added: replica-2
Replica 2 New participant added: replica-1
Replica 2 Participants in the new view: [Actor[akka://vssystem/user/replica-2#1860791083], Actor[akka://vssystem/user/replica-1#-1997972147]]
Replica 2 Coordinator in the new view: replica-2
RepointableActorRef  Message [org.total_order_broadcast.Node$ElectionTimeout] from Actor[akka://vssystem/user/replica-2#1860791083] to Actor[akka://vssystem/user/replica-2#1860791083] was unhandled. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
RepointableActorRef  Message [org.total_order_broadcast.Node$ElectionTimeout] from Actor[akka://vssystem/user/replica-1#-1997972147] to Actor[akka://vssystem/user/replica-1#-1997972147] was unhandled. [2] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
Replica 2 Received ping from client_1
Replica 2 Requesting update from replicas. Value proposed: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 1 Received update request from coordinator. Value: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 2 Received update request from coordinator. Value: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 2 Quorum reached, sending Ok for value 1
Replica 1 Committing value: 1 SeqNum: 1
Replica 2 Committing value: 1 SeqNum: 1
#logback.classic pattern: %logger{0} %X{replicaId} %msg%n
Slf4jLogger  Slf4jLogger started
Replica 2 Starting with 3 peer(s)
Replica 3 Starting with 3 peer(s)
Client 1 starting with 3 peer(s)
Client 2 starting with 3 peer(s)
Replica 1 Starting with 3 peer(s)
Replica 2 Participants: [Actor[akka://vssystem/user/coordinator#1805039735], Actor[akka://vssystem/user/replica-2#1185290516], Actor[akka://vssystem/user/replica-1#1032785605]]
Replica 3 Participants: [Actor[akka://vssystem/user/coordinator#1805039735], Actor[akka://vssystem/user/replica-2#1185290516], Actor[akka://vssystem/user/replica-1#1032785605]]
Replica 1 Participants: [Actor[akka://vssystem/user/coordinator#1805039735], Actor[akka://vssystem/user/replica-2#1185290516], Actor[akka://vssystem/user/replica-1#1032785605]]
Replica 2 Coordinator is not responding. Starting election.
Replica 1 Coordinator is not responding. Starting election.
Replica 2  Received election message. Proposed coordinator: 2
Replica 1  Received election message. Proposed coordinator: 2
Replica  replica-2 Election timeout. Trying with next node: 1
Replica 1 New participant added: replica-2
Replica 1 New participant added: replica-1
Replica 1 Participants in the new view: [Actor[akka://vssystem/user/replica-2#1185290516], Actor[akka://vssystem/user/replica-1#1032785605]]
Replica 1 Coordinator in the new view: replica-2
Replica 2 View change message sent
Replica 2 New participant added: replica-2
Replica 2 New participant added: replica-1
Replica 2 Participants in the new view: [Actor[akka://vssystem/user/replica-2#1185290516], Actor[akka://vssystem/user/replica-1#1032785605]]
Replica 2 Coordinator in the new view: replica-2
RepointableActorRef  Message [org.total_order_broadcast.Node$ElectionTimeout] from Actor[akka://vssystem/user/replica-2#1185290516] to Actor[akka://vssystem/user/replica-2#1185290516] was unhandled. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
RepointableActorRef  Message [org.total_order_broadcast.Node$ElectionTimeout] from Actor[akka://vssystem/user/replica-1#1032785605] to Actor[akka://vssystem/user/replica-1#1032785605] was unhandled. [2] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
Replica 2 Received ping from client_1
Replica 2 Requesting update from replicas. Value proposed: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 1 Received update request from coordinator. Value: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 2 Received update request from coordinator. Value: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 2 Quorum reached, sending Ok for value 1
Replica 1 Committing value: 1 SeqNum: 1
Replica 2 Committing value: 1 SeqNum: 1
#logback.classic pattern: %logger{0} %X{replicaId} %msg%n
Slf4jLogger  Slf4jLogger started
Replica 3 Starting with 3 peer(s)
Replica 2 Starting with 3 peer(s)
Client 2 starting with 3 peer(s)
Client 1 starting with 3 peer(s)
Replica 1 Starting with 3 peer(s)
Replica 3 Participants: [Actor[akka://vssystem/user/coordinator#-2060042243], Actor[akka://vssystem/user/replica-2#518078368], Actor[akka://vssystem/user/replica-1#1411099306]]
Replica 2 Participants: [Actor[akka://vssystem/user/coordinator#-2060042243], Actor[akka://vssystem/user/replica-2#518078368], Actor[akka://vssystem/user/replica-1#1411099306]]
Replica 1 Participants: [Actor[akka://vssystem/user/coordinator#-2060042243], Actor[akka://vssystem/user/replica-2#518078368], Actor[akka://vssystem/user/replica-1#1411099306]]
Replica 2 Coordinator is not responding. Starting election.
Replica 1 Coordinator is not responding. Starting election.
Replica 2  Received election message. Proposed coordinator: 2
Replica 1  Received election message. Proposed coordinator: 2
Replica  replica-2 Election timeout. Trying with next node: 1
Replica 1 New participant added: replica-2
Replica 1 New participant added: replica-1
Replica 1 Participants in the new view: [Actor[akka://vssystem/user/replica-2#518078368], Actor[akka://vssystem/user/replica-1#1411099306]]
Replica 1 Coordinator in the new view: replica-2
Replica 2 View change message sent
Replica 2 New participant added: replica-2
Replica 2 New participant added: replica-1
Replica 2 Participants in the new view: [Actor[akka://vssystem/user/replica-2#518078368], Actor[akka://vssystem/user/replica-1#1411099306]]
Replica 2 Coordinator in the new view: replica-2
RepointableActorRef  Message [org.total_order_broadcast.Node$ElectionTimeout] from Actor[akka://vssystem/user/replica-2#518078368] to Actor[akka://vssystem/user/replica-2#518078368] was unhandled. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
RepointableActorRef  Message [org.total_order_broadcast.Node$ElectionTimeout] from Actor[akka://vssystem/user/replica-1#1411099306] to Actor[akka://vssystem/user/replica-1#1411099306] was unhandled. [2] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.
Replica 1 Received ping from client_1
Replica 1 Received update message from client: 1
Replica 1 Forwarding update message to coordinator: Actor[akka://vssystem/user/replica-2#518078368] with value 1
Replica 1 Pending message: 1
Replica 2 Requesting update from replicas. Value proposed: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 1 Received update request from coordinator. Value: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 2 Received update request from coordinator. Value: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 2 Quorum reached, sending Ok for value 1
Replica 1 Committing value: 1 SeqNum: 1
Replica 1 Removing pending message: 1 SeqNum: 1
Replica 2 Committing value: 1 SeqNum: 1
Replica 2 Read read from Client: client_2 Value returned: 1
Replica 1 Received ping from client_1
Replica 1 Received ping from client_1
Replica 1 Received update message from client: 2
Replica 1 Forwarding update message to coordinator: Actor[akka://vssystem/user/replica-2#518078368] with value 2
Replica 1 Pending message: 2
Replica 1 Received ping from client_1
Replica 1 Received update message from client: 3
Replica 1 Forwarding update message to coordinator: Actor[akka://vssystem/user/replica-2#518078368] with value 3
Replica 1 Pending message: 3
Replica 2 Requesting update from replicas. Value proposed: 2 SeqNum: EpochSeqNum{epoch=0, seqNum=2}
Replica 1 Received update request from coordinator. Value: 2 SeqNum: EpochSeqNum{epoch=0, seqNum=2}
Replica 2 Requesting update from replicas. Value proposed: 3 SeqNum: EpochSeqNum{epoch=0, seqNum=3}
Replica 1 Received update request from coordinator. Value: 3 SeqNum: EpochSeqNum{epoch=0, seqNum=3}
Replica 2 Received update request from coordinator. Value: 2 SeqNum: EpochSeqNum{epoch=0, seqNum=2}
Replica 2 Quorum reached, sending Ok for value 2
Replica 2 Received update request from coordinator. Value: 3 SeqNum: EpochSeqNum{epoch=0, seqNum=3}
Replica 1 Committing value: 2 SeqNum: 2
Replica 2 Quorum reached, sending Ok for value 3
Replica 1 Removing pending message: 2 SeqNum: 2
Replica 1 Committing value: 3 SeqNum: 3
Replica 1 Removing pending message: 3 SeqNum: 3
Replica 2 Committing value: 2 SeqNum: 2
Replica 2 Committing value: 3 SeqNum: 3
Replica 1 Read read from Client: client_1 Value returned: 3
Replica 2 Read read from Client: client_2 Value returned: 3
#logback.classic pattern: %logger{0} %X{replicaId} %msg%n
Slf4jLogger  Slf4jLogger started
Client 1 starting with 3 peer(s)
Replica 3 Starting with 3 peer(s)
Replica 2 Starting with 3 peer(s)
Replica 1 Starting with 3 peer(s)
Client 2 starting with 3 peer(s)
Replica 1 Participants: [Actor[akka://vssystem/user/coordinator#171941782], Actor[akka://vssystem/user/replica-2#918400683], Actor[akka://vssystem/user/replica-1#-1068948439]]
Replica 2 Participants: [Actor[akka://vssystem/user/coordinator#171941782], Actor[akka://vssystem/user/replica-2#918400683], Actor[akka://vssystem/user/replica-1#-1068948439]]
Replica 3 Participants: [Actor[akka://vssystem/user/coordinator#171941782], Actor[akka://vssystem/user/replica-2#918400683], Actor[akka://vssystem/user/replica-1#-1068948439]]
Replica 3 Received ping from client_1
Replica 3 Requesting update from replicas. Value proposed: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 2 Received update request from coordinator. Value: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 1 Received update request from coordinator. Value: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 3 Received update request from coordinator. Value: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 3 Quorum reached, sending Ok for value 1
Replica 2 Committing value: 1 SeqNum: 1
Replica 1 Committing value: 1 SeqNum: 1
Replica 3 Committing value: 1 SeqNum: 1
#logback.classic pattern: %logger{0} %X{replicaId} %msg%n
Slf4jLogger  Slf4jLogger started
Replica 3 Starting with 3 peer(s)
Replica 1 Starting with 3 peer(s)
Client 1 starting with 3 peer(s)
Client 2 starting with 3 peer(s)
Replica 2 Starting with 3 peer(s)
Replica 2 Participants: [Actor[akka://vssystem/user/coordinator#-357001575], Actor[akka://vssystem/user/replica-2#-95439725], Actor[akka://vssystem/user/replica-1#-160552502]]
Replica 3 Participants: [Actor[akka://vssystem/user/coordinator#-357001575], Actor[akka://vssystem/user/replica-2#-95439725], Actor[akka://vssystem/user/replica-1#-160552502]]
Replica 1 Participants: [Actor[akka://vssystem/user/coordinator#-357001575], Actor[akka://vssystem/user/replica-2#-95439725], Actor[akka://vssystem/user/replica-1#-160552502]]
Replica 2 Received ping from client_2
Replica 2 Received update message from client: 1
Replica 2 Forwarding update message to coordinator: Actor[akka://vssystem/user/coordinator#-357001575] with value 1
Replica 2 Pending message: 1
Replica 3 Requesting update from replicas. Value proposed: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 2 Received update request from coordinator. Value: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 1 Received update request from coordinator. Value: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 3 Received update request from coordinator. Value: 1 SeqNum: EpochSeqNum{epoch=0, seqNum=1}
Replica 3 Quorum reached, sending Ok for value 1
Replica 2 Committing value: 1 SeqNum: 1
Replica 2 Removing pending message: 1 SeqNum: 1
Replica 1 Committing value: 1 SeqNum: 1
Replica 3 Committing value: 1 SeqNum: 1
Replica 3 Read read from Client: client_1 Value returned: 1
#logback.classic pattern: %logger{0} %X{replicaId} %msg%n
